{"version":3,"sources":["Card.js","Cardlist.js","searchbox.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","src","Cardlist","robots","Cardcomponent","map","user","i","Searchbox","searchfield","searchchange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filterR","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAoBeA,EAhBJ,SAACC,GAAS,IACbC,EAAeD,EAAfC,KAAKC,EAAUF,EAAVE,MAAMC,EAAIH,EAAJG,GAElB,OAEM,cADH,CACG,OAAKC,UAAU,mDAAf,UAEC,qBAAKC,IAAG,gCAA2BF,EAA3B,cACR,gCACA,6BAAKF,IACL,4BAAIC,IAFJ,WCMOI,EAhBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEXC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACtC,OAAO,cAAC,EAAD,CACNR,GAAII,EAAOI,GAAGR,GACdF,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHAS,MAMnB,OACS,8BACJH,KCASI,EAXE,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC9B,OACC,8BACA,uBAAOV,UAAU,kCACjBW,KAAK,SAASC,YAAY,gBACpBC,SAAUH,OCIHI,EATF,SAAClB,GACb,OAEK,aADC,CACD,OAAKmB,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACEtB,EAAMuB,YCiDCC,E,kDA5Cd,aAAc,IAAD,8BACZ,gBAkBDC,eAAe,SAACC,GACX,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAlB5C,EAAKC,MAAM,CACVvB,OAAO,GACJM,YAAY,IAJJ,E,qDASZ,WAAoB,IAAD,OACnBkB,MAAM,8CACJC,MAAK,SAAAC,GACL,OAAOA,EAASC,UAChBF,MAAK,SAAAG,GAAQ,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAUtC,WAAU,IAAD,OACFC,EAAQC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAClC,OAAOA,EAAON,KAAKsC,cAAcC,SAAS,EAAKV,MAAMjB,YAAY0B,kBAGvE,OAA8B,IAA3BF,KAAKP,MAAMvB,OAAOkC,OACZ,yCAGR,sBAAKrC,UAAU,KAAf,UACC,8CAEA,cAAC,EAAD,CAAWS,YAAawB,KAAKP,MAAMjB,YAAaC,aAAcuB,KAAKZ,iBAC7D,cAAC,EAAD,UACN,cAAC,EAAD,CAAUlB,OAAQ6B,a,GAtCHM,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.42179b47.chunk.js","sourcesContent":["//import才能读jsx\r\n//JSX 可以生成 React “元素”\r\nimport React from 'react';\r\n\r\nconst Card=(props)=>{\r\n\tconst {name,email,id}=props;\r\n\t//return 的是整个jsx而不是html\r\n\treturn(\r\n\t   //只能返回一样\r\n       <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n  \r\n        <img src={` https://robohash.org/${id}?200x200`}/>\r\n       \t<div>\r\n       \t<h2>{name}</h2> \r\n       \t<p>{email}</p>>      \t \r\n       \t</div>\r\n       </div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport \tCard from './Card.js';\r\nconst Cardlist =({robots})=>{\r\n\t//遍历整个robots用map\r\n\tconst Cardcomponent = robots.map((user,i)=>{\r\n\t\treturn(<Card key={i} \r\n\t\t\tid={robots[i].id} \r\n\t\t\tname={robots[i].name} \r\n\t\t\temail={robots[i].email}/>);\r\n\t\t\t\r\n\t})\r\n\treturn(\r\n          <div>\r\n  \t  {Cardcomponent}\r\n  </div>\r\n\t\t);\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Searchbox =({searchfield,searchchange}) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t<input className='pa2 ba b--blue bg-lightest-blue'\r\n\t\ttype='search' placeholder='search robots'\r\n        onChange={searchchange}\r\n\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Searchbox;\r\n// \r\n","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n\treturn (\r\n       //双括号里面加css属性\r\n      <div style={{overflowY:'scroll',border:'5px solid black',height:'500px'}}>\r\n      \t{props.children}\r\n      </div>\r\n\t\t)\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport Cardlist from'./Cardlist';\r\nimport Searchbox from './searchbox.js';\r\nimport Scroll from './Scroll.js';\r\nimport { robots } from './robots.js';\r\n\r\n\r\n\t//create a class\r\n\t//总是放在 parent component 所以 parent component\r\n\t//可以将状态交给 child component\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots:[],\r\n\t\t    searchfield:''\r\n\t\t}\r\n\t\t//console.log('constructor');\r\n\t}\r\n\r\n\t componentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t \t.then(response=>{\r\n\t \t\treturn response.json();})\r\n\t \t.then(users=>{this.setState({robots:users})})\r\n\t\t\r\n\r\n\t }\r\n\t//必须写成这样的形式 =(event)=>\r\n\t//否则 this.state指的是event的state\r\n\tonSearchChange=(event)=>{\r\n      this.setState({searchfield:event.target.value})\r\n     \r\n\t}\r\n\trender (){\r\n\t\tconst filterR=this.state.robots.filter(robots =>{\r\n      \treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n      })\r\n\t\t//console.log('render');\r\n\tif(this.state.robots.length===0)\r\n\t\t{return <h1>Loading</h1>}\r\n\telse{\r\n\treturn(\r\n\t\t<div className='tc'>\r\n\t\t\t<h1>Robotfriends</h1>\r\n\r\n\t\t\t<Searchbox searchfield={this.state.searchfield} searchchange={this.onSearchChange}/>\r\n         <Scroll>\r\n\t\t\t<Cardlist robots={filterR}/>\r\n\t\t </Scroll>\r\n\t\t</div>\r\n\t\t);}\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \tApp from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}